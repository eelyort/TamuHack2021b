{"version":3,"sources":["CustomComponents/RectFill/RectFill.js","Header/Header.js","Timer/Timer.js","Map/Map.js","Options/Options.js","Leaderboards/Leaderboards.js","Textinput.js","Mocks/FakeGetLocation.js","App.js","reportWebVitals.js","index.js"],"names":["RectFill","props","wrapperRef","React","state","dimensions","eventListenerAttached","this","padding","ratio","inners","width","height","sideLength","Math","min","style","position","left","top","className","children","console","log","ref","window","addEventListener","setState","current","getBoundingClientRect","prevProps","prevState","snapshot","removeEventListener","Header","useState","drawerOpen","setDrawerOpen","getNextLoc","timeTillTakeoff","timeToGate","AppBar","color","Toolbar","IconButton","aria-label","aria-haspopup","onClick","Drawer","anchor","open","onClose","MenuItem","href","Timer","caloriesPerTime","Accordion","AccordionSummary","Typography","variant","floor","AccordionDetails","Map","directions","directionsService","google","maps","DirectionsService","routeMe","bind","routeMeCallback","startLocation","endLocation","callback","time","origin","lat","latitude","lng","long","longitude","destination","requestJSON","travelMode","route","agentCallback","result","status","DirectionsStatus","OK","routes","legs","duration","value","error","setRouteMe","val1","val2","val3","val","GoogleMapExample","withGoogleMap","defaultCenter","defaultZoom","containerElement","mapElement","Component","memo","Options","FormGroup","FormControlLabel","control","Checkbox","checked","bathroom","onChange","e","target","label","FormHelperText","food","togo","useStyles","makeStyles","theme","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","createData","category","score","rank","rows","Leaderboard","classes","expandIcon","aria-controls","id","TableContainer","component","Paper","Table","TableHead","align","TableBody","map","row","scope","name","Textinput","setVal","TextField","tellChange","LocationMock","index","fakes","length","MapLoader","withScriptjs","date","supportedGates","Set","validatePlaneNum","toValidate","a","fetch","then","response","json","data","filter","has","gate","code","correct","flightNumber","ans","oldState","queuedNum","setTimeout","info","selecting","validating","changed","deepEqual","App","locMock","currentLocation","getNext","flightState","checkboxes","setFlightState","setCheckboxes","updateInterval","numUpdates","update","setTimeTillTakeoff","old","setTimeToGate","updateLocation","getFlightDepartureTimeUnix","Date","parse","departureTime","now","location","options","trueAns","content","googleMapURL","loadingElement","oldS","Button","disabled","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a20786fd.chunk.js","sourcesContent":["import * as React from 'react';\nimport './RectFill.css';\n\n// square/rect fills\n//  ratio is width/height\nclass RectFill extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.wrapperRef = React.createRef();\n        this.state = {\n            dimensions: null,\n            eventListenerAttached: false,\n        };\n    }\n    render(){\n        // ratio is width/height\n        const {padding = 0, ratio = 1} = this.props;\n        const {dimensions, eventListenerAttached} = this.state;\n\n        let inners = null;\n\n        if(eventListenerAttached && dimensions !== null){\n            const {width, height} = dimensions;\n\n            if(width && height){\n                const sideLength = Math.min(width/ratio, height);\n                const style = {\n                    position: 'absolute',\n                    width: `${sideLength*ratio - 2*padding}px`,\n                    height: `${sideLength - 2*padding}px`,\n                    left: `${(width-sideLength*ratio)/2 + padding}px`,\n                    top: `${(height-sideLength)/2 + padding}px`,\n                };\n\n                inners = (\n                    <div style={style} className={this.props.className}>\n                        {this.props.children}\n                    </div>\n                );\n            }\n            else {\n                console.log(`SquareFill error, found width/height to be: [${width}, ${height}]`);\n            }\n        }\n\n        return (\n            <div ref={this.wrapperRef} className={'rect-fill-js-wrapper-style'} >\n                {inners}\n            </div>\n        );\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", () => {\n            this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\n        });\n        this.setState(() => ({eventListenerAttached: true}));\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.dimensions === null){\n            this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\n        }\n    }\n    componentWillUnmount() {\n        if(this.state.eventListenerAttached){\n            // this.wrapperRef.current.removeEventListener(\"resize\", () => {\n            //     console.log('resize');\n            //     this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}))\n            // });\n            window.removeEventListener(\"resize\", () => {\n                console.log('resize');\n                this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\n            });\n        }\n    }\n}\n\nexport default RectFill;","import React, { useState } from 'react';\n\nimport { MenuItem, IconButton, Toolbar, AppBar, Drawer } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport './Header.css';\n\nexport default function Header (props) {\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const { timeTillTakeoff, timeToGate, getNextLoc } = props;\n\n    return (\n        <AppBar color={'primary'} className={'header-div'} position={'static'}>\n            <Toolbar>\n                <div>\n                    {\n                        <>\n                            <IconButton\n                                color={'inherit'}\n                                aria-label={'menu'}\n                                aria-haspopup={'true'}\n                                onClick={() => setDrawerOpen(!drawerOpen)}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Drawer\n                                className={'header-drawer'}\n                                anchor={\"left\"}\n                                open={drawerOpen}\n                                onClose={() => setDrawerOpen(false)}\n                            >\n                                <MenuItem className={'header-drawer-button'} href={'#timer-div'} onClick={() => setDrawerOpen(false)}>\n                                    Home\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#map-div'} onClick={() => setDrawerOpen(false)}>\n                                    Map\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#options-div'} onClick={() => setDrawerOpen(false)}>\n                                    Options\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#leaderboards-div'} onClick={() => setDrawerOpen(false)}>\n                                    Leaderboards\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#leaderboards-div'} onClick={() => {\n                                    getNextLoc();\n                                    setDrawerOpen(false);\n                                }}>\n                                    Get Next Current Location\n                                </MenuItem>\n                            </Drawer>\n                        </>\n                    }\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from 'react';\nimport { Accordion, AccordionSummary, AccordionDetails, Typography } from \"@material-ui/core\";\nimport \"./timer.css\";\n\n\nexport default function Timer (props) {\n    const { timeTillTakeoff, timeToGate, caloriesPerTime } = props;\n    return (\n\t\t<Accordion>\n\t\t\t<AccordionSummary>\n                <div className = \"style\">\n\t\t\t\t<Typography variant={'body2'}>\n\t\t\t\t\tFree time left:\n\t\t\t\t</Typography>\n                <Typography variant={'h6'}>\n\t\t\t\t\t{Math.floor((timeTillTakeoff-timeToGate) / 60)} minutes {(timeToGate-timeTillTakeoff)  % 60} seconds\n\t\t\t\t</Typography>\n                </div>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails className = \"style2\">\n                <div className = \"style\">\n\t\t\t\t<Typography variant={'body2'}>\n\t\t\t\t\tPlane takes off in:\n\t\t\t\t</Typography>\n                <Typography variant={'h9'}>\n                {Math.floor((timeTillTakeoff) / 60)} minutes {(timeTillTakeoff)  % 60} seconds \n\t\t\t\t</Typography>\n                <Typography variant={'body2'}>\n\t\t\t\t\t<br></br>Travel time to gate:\n\t\t\t\t</Typography>\n                <Typography variant={'h9'}>\n                {Math.floor((timeToGate) / 60)} minutes {(timeToGate)  % 60} seconds \n\t\t\t\t</Typography>\n                <Typography variant={'body2'}>\n\t\t\t\t\t<br></br>Calories Burned:\n\t\t\t\t</Typography>\n                <Typography variant={'h9'}>\n                {Math.floor((timeToGate) * caloriesPerTime)} calories \n\t\t\t\t</Typography>\n                </div>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n    );\n}","import React , { Component } from 'react';\nimport {  GoogleMap, DirectionsRenderer, withGoogleMap, withScriptjs, google} from 'react-google-maps';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      directions: null\n    };\n\n    // for use in routeMe\n    this.directionsService = new window.google.maps.DirectionsService();\n\n    // bind functions\n    this.routeMe = this.routeMe.bind(this);\n    this.routeMeCallback = this.routeMeCallback.bind(this);\n  }\n  // specs:\n  //  startLocation: map { lat | latitude: NUMBER, lng | long | longitude: NUMBER }\n  //  endLocation: map { lat | latitude: NUMBER, lng | long | longitude: NUMBER }\n  //  callback: (time) => ???\n  //    if you (some other class) needs the time, make this \"(time) => setState(...)\" or something\n  //  examples:\n  //    routeMe({latitude: 0.1, long: 0.1}, {lat: 2, lng: -2})\n  //      makes the map display the path from [0.1, 0.1] to [2, -2]\n  routeMe(startLocation, endLocation, callback = (time) => null) {\n    // console.log(\"RouteMe called: start, end:\");\n    // console.log(startLocation);\n    // console.log(endLocation);\n\n    const origin = {\n      lat: startLocation.lat ?? startLocation.latitude ?? 0,\n      lng: startLocation.lng ?? startLocation.long ?? startLocation.longitude ?? 0,\n    };\n    const destination = {\n      lat: endLocation.lat ?? endLocation.latitude ?? 0,\n      lng: endLocation.lng ?? endLocation.long ?? endLocation.longitude ?? 0,\n    };\n    const requestJSON = {\n      origin: origin,\n      destination: destination,\n      travelMode: 'WALKING',\n    };\n\n    this.directionsService.route({...requestJSON}, this.routeMeCallback(callback));\n  }\n  // helper function for above\n  routeMeCallback(agentCallback) {\n    return ((result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n          console.log(result);\n        this.setState({\n          directions: result\n        });\n        agentCallback(result.routes[0].legs[0].duration.value);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  }\n    \n  componentDidMount() {\n    // const directionsService = new window.google.maps.DirectionsService();\n    this.props.setRouteMe((val1, val2, val3) => this.routeMe(val1, val2, val3));\n\n    const origin = { lat: 40.756795, lng: -73.954298 };\n    const destination = { lat: 40.857895, lng: -73.954298 };\n\n    this.routeMe(origin, destination, (val) => console.log(`Default routeMe returning ${val} seconds`));\n  }\n\n    render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          containerElement={<div style={{ height: `500px`, width: \"500px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n/*\n<Map\n    google={this.props.google}\n    zoom={14}\n    style={mapStyles}\n    initialCenter={\n    {\n        lat: -1.2884,\n        lng: 36.8233\n    }\n    }\n/>\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyAOn4IKOryQBul-tiLGCvsXEzAJGNKtX9Q'\n  })(Map);\n  */\n\nexport default React.memo(Map)\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function Options(props) {\n    return (\n        <div>\n            <FormGroup aria-label=\"position\">\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\"\n                        checked={props.state.bathroom}\n                        onChange={(e) => props.setState({ ...props.state, bathroom: e.target.checked })}\n                    />}\n                    label=\"Bathroom\"\n                />\n                <FormHelperText>Select to route you through a restroom on the way to your gate.</FormHelperText>\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\"\n                        checked={props.state.food}\n                        onChange={(e) => props.setState({ ...props.state, food: e.target.checked })}\n                    />}\n                    label=\"Eat in\"\n                />\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\"\n                        checked={props.state.togo}\n                        onChange={(e) => props.setState({ ...props.state, togo: e.target.checked })}\n                    />}\n                    label=\"Food/Coffee To-go\"\n                />\n            </FormGroup>\n        </div>\n    );\n}","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nfunction createData(category, score, rank) {\n    return { category, score, rank };\n}\n\nconst rows = [\n    createData('Calories burned', '832 calories', 'Bronze'),\n    createData('Steps taken', '2873 steps', 'Gold'),\n    createData('Arrival to gate', '3 minutes early', 'Silver'),\n];\n\n\nexport default function Leaderboard() {\n    const classes = useStyles();\n\n    return (\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography className={classes.heading}>Leaderboards</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>Category</StyledTableCell>\n                                <StyledTableCell align=\"right\">Score</StyledTableCell>\n                                <StyledTableCell align=\"right\">Ranking</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <StyledTableRow key={row.name}>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                        {row.category}\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"right\">{row.score}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{row.rank}</StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                        </TableBody>\n\n                    </Table>\n                </TableContainer>\n            </AccordionDetails>\n        </Accordion>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { TextField } from \"@material-ui/core\";\n\nexport default function Textinput (props) {\n    const [val, setVal] = useState(() => '');\n\n    return (\n        <TextField value={val} onChange={(e) => {\n            setVal(e.target.value);\n            props.tellChange(e.target.value);\n        }} {...props} />\n    );\n}","export default class LocationMock {\n    constructor(){\n        this.index = -1;\n        // lat/long\n        //  Security:       41.97646727821397, -87.90130965501601\n        //  Subway:         41.97540730411563, -87.90320274316586\n        //  AA lounge:      41.97481412314290, -87.90002753367936\n        //  Smoothie King:  41.97759762749232, -87.90717628823200\n        this.fakes = [\n            {\n                lat: 41.97646727821397,\n                lng: -87.90130965501601,\n            },\n            {\n                lat: 41.97540730411563,\n                lng: -87.90320274316586,\n            },\n            {\n                lat: 41.97481412314290,\n                lng: -87.90002753367936,\n            },\n            {\n                lat: 41.97759762749232,\n                lng: -87.90717628823200,\n            },\n        ];\n    }\n\n    getNext() {\n        this.index++;\n        return this.fakes[this.index % this.fakes.length];\n    }\n};","import React, { useState } from 'react';\n\nimport RectFill from \"./CustomComponents/RectFill/RectFill\";\n\nimport Header from \"./Header/Header.js\";\nimport Timer from \"./Timer/Timer.js\";\nimport Map from \"./Map/Map.js\";\nimport Options from \"./Options/Options.js\";\nimport Leaderboards from \"./Leaderboards/Leaderboards.js\";\nimport { withScriptjs } from \"react-google-maps\";\nimport deepEqual from 'deep-equal';\n\nimport { Button, CircularProgress, Typography } from \"@material-ui/core\";\nimport Textinput from \"./Textinput\";\n\nimport './App.css';\n\nimport LocationMock from \"./Mocks/FakeGetLocation\";\nconst MapLoader = withScriptjs(Map);\n\n// constants\nconst date = \"2020-01-31\";\n// ms between timer updates\nconst msUpdateInterval = 1000;\n// timer updates between checking flight data again\nconst updatesPerReFetch = 60;\nconst caloriesPerTime = 13.2 / 60;\nconst supportedGates = new Set(['H18', 'H12', 'G20', 'G5', 'E14', 'B2', 'C3', 'C32', 'B18', 'B7', 'B1', 'K1']);\n// time\nconst timeToBathroom = 8 * 60;\nconst timeToFood = 12 * 60;\nconst timeToEatIn = 30 * 60;\n\nasync function validatePlaneNum(toValidate, setState) {\n    fetch(`https://tamuhack-2021.uc.r.appspot.com/flights?date=${date}`)\n        .then(response => response.json())\n        .then(data => {\n            data = data.filter((val) => supportedGates.has(val.gate.code));\n            console.log(data);\n            const correct = data.filter((val) => val.flightNumber === toValidate);\n\n            // validate here\n            let ans = correct.length ? correct[0] : null;\n\n            // return data if validate, else null\n            setState((oldState) => {\n                if(oldState.queuedNum !== \"\"){\n                    setTimeout(() => validatePlaneNum(oldState.queuedNum, setState), 0);\n                    return {\n                        ...oldState,\n                        queuedNum: \"\",\n                    }\n                }\n                else{\n                    return {\n                        info: ans,\n                        selecting: oldState.selecting,\n                        validating: false,\n                        queuedNum: \"\",\n                        changed: !deepEqual(ans, oldState.info),\n                    }\n                }\n            });\n        });\n}\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.locMock = new LocationMock();\n        // call me to change map displayed values\n        this.routeMe = null;\n\n        // state\n        this.state = {\n            currentLocation: this.locMock.getNext(),\n            flightState: {\n                info: null,\n                selecting: true,\n                validating: false,\n                queuedNum: \"\",\n                changed: false,\n            },\n            checkboxes: {\n                bathroom: false,\n                food: false,\n                togo: false,\n            },\n            time: {\n                timeTillTakeoff: -1,\n                timeToGate: -1,\n            }\n        };\n\n        this.setRouteMe = (val) => this.routeMe = val;\n        this.setFlightState = (val) => this.setState((oldState) => ({ ...oldState, flightState: val(oldState.flightState) }));\n        this.setCheckboxes = (val) => this.setState((oldState) => ({ ...oldState, checkboxes: val }));\n\n        // periodic update interval\n        this.updateInterval = null;\n        this.numUpdates = 0;\n        this.update = () => {\n            if(!this.state.flightState.selecting) {\n                this.setTimeTillTakeoff();\n                if(this.state.flightState.changed) {\n                    this.setFlightState((old) => ({ ...old, changed: false }));\n                    this.setTimeToGate();\n                }\n                this.numUpdates++;\n                if(this.numUpdates > updatesPerReFetch){\n                    this.numUpdates = 0;\n                    validatePlaneNum(this.state.flightState.info.flightNumber);\n                }\n            }\n        };\n\n        // location\n        this.updateLocation = () => {\n            this.setState((oldState) => ({ ...oldState, currentLocation: this.locMock.getNext() }));\n        };\n\n        // for getting date / time\n        this.getFlightDepartureTimeUnix = () => {\n            return Date.parse(this.state.flightState.info.departureTime);\n        };\n        // these both return nothing, setting the state\n        this.setTimeTillTakeoff = () => {\n            const ans = Math.floor((this.getFlightDepartureTimeUnix() - Date.now()) / 1000);\n            this.setState((oldState) => ({ ...oldState, time: { ...oldState.time, timeTillTakeoff: ans }, }));\n        };\n        // async\n        this.setTimeToGate = () => {\n            this.routeMe(this.state.currentLocation, this.state.flightState.info.gate.location, (ans) => {\n                console.log(`routeMe ans: ${ans}`);\n\n                // add extra time for going to bathroom and stuff\n                const options = this.state.checkboxes;\n                const trueAns = ans + (options.bathroom ? timeToBathroom : 0) + (options.togo ? timeToFood : 0) + (options.food ? timeToEatIn : 0);\n\n                this.setState((oldState) => ({ ...oldState, time: { ...oldState.time, timeToGate: trueAns } }));\n            });\n        };\n\n        // TODO: delete testing\n        setTimeout(() => {\n            if(!this.state.flightState.selecting) {\n                console.log(this.state.flightState.info);\n            }\n            else {\n                setTimeout(() => {\n                    if(!this.state.flightState.selecting) {\n                        console.log(this.state.flightState.info);\n                    }\n                    else {\n                        setTimeout(() => {\n                            if(!this.state.flightState.selecting) {\n                                console.log(this.state.flightState.info);\n                            }\n                            else {\n\n                            }\n                        }, 5000);\n                    }\n                }, 5000);\n            }\n        }, 5000);\n    }\n    render() {\n        // get values from state\n        const { flightState, checkboxes, time } = this.state;\n\n        const content = (\n            <div className={'content'}>\n                <Header getNextLoc={() => this.locMock.getNext()} />\n                <div id={'timer-div'}>\n                    <Timer {...time} caloriesPerTime={caloriesPerTime} />\n                </div>\n                <div id={'map-div'}>\n                    <RectFill>\n                        <MapLoader\n                            setRouteMe={this.setRouteMe}\n                            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAOn4IKOryQBul-tiLGCvsXEzAJGNKtX9Q\"\n                            loadingElement={<div style={{ height: `100%` }} />}\n                        />\n                    </RectFill>\n                </div>\n                <div id={'options-div'}>\n                    <Options\n                        state={checkboxes}\n                        setState={this.setCheckboxes}\n                    />\n                </div>\n                <div id={'leaderboards-div'}>\n                    <Leaderboards />\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"App\">\n                {(!flightState.selecting) ? content : (\n                    <>\n                        <div className={'blur-me'}>\n                            {content}\n                        </div>\n                        <div className={'flight-number'}>\n                            <Textinput\n                                label={\"Flight Number\"}\n                                variant={\"outlined\"}\n                                tellChange={(e) => {\n                                    if(flightState.validating) {\n                                        this.setFlightState((oldS) => ({ ...oldS, queuedNum: e, }));\n                                    }\n                                    else {\n                                        this.setFlightState((oldS) => ({ ...oldS, validating: true }));\n                                        validatePlaneNum(e, this.setFlightState);\n                                    }\n                                }}\n                            />\n                            <div className={'submit-button'}>\n                                <Button\n                                    disabled={flightState.validating || !flightState.info}\n                                    onClick={() => {\n                                        if(flightState.validating || !flightState.info) {\n                                            // nothing\n                                        }\n                                        else {\n                                            this.setFlightState((old) => ({ ...old, selecting: false }));\n                                        }\n                                    }}\n                                    variant={'outlined'}\n                                >\n                                    Submit\n                                </Button>\n                                {/*<div className={'loading-div' + (flightState.validating ? ' show' : '')}>*/}\n                                {/*    <CircularProgress variant={'indeterminate'} />*/}\n                                {/*</div>*/}\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.updateInterval = setInterval(() => this.update(), msUpdateInterval);\n    }\n    componentWillUnmount() {\n        clearInterval(this.updateInterval);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // for setting initial time values\n        if(!this.state.flightState.selecting && this.state.time.timeTillTakeoff === -1 && this.state.time.timeToGate === -1) {\n            this.setTimeTillTakeoff();\n            this.setTimeToGate();\n        }\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}