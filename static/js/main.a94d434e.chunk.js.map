{"version":3,"sources":["CustomComponents/RectFill/RectFill.js","Header/Header.js","Timer/Timer.js","Map/Map.js","Options/Options.js","Leaderboards/Leaderboards.js","Textinput.js","Mocks/FakeGetLocation.js","App.js","reportWebVitals.js","index.js"],"names":["RectFill","props","wrapperRef","React","state","dimensions","eventListenerAttached","this","padding","ratio","inners","width","height","sideLength","Math","min","style","position","left","top","className","children","console","log","ref","window","addEventListener","setState","current","getBoundingClientRect","prevProps","prevState","snapshot","removeEventListener","Header","useState","drawerOpen","setDrawerOpen","timeTillTakeoff","timeToGate","getNextLoc","minLeft","floor","colorClass","AppBar","color","Toolbar","IconButton","aria-label","aria-haspopup","onClick","Drawer","anchor","open","onClose","MenuItem","href","Timer","caloriesPerTime","Accordion","variant","AccordionSummary","Typography","AccordionDetails","Map","directions","directionsService","google","maps","DirectionsService","routeMe","bind","routeMeCallback","startLocation","endLocation","callback","time","origin","lat","latitude","lng","long","longitude","destination","requestJSON","travelMode","TravelMode","WALKING","route","agentCallback","result","status","DirectionsStatus","OK","routes","legs","duration","value","error","setRouteMe","val1","val2","val3","val","GoogleMapExample","withGoogleMap","defaultCenter","defaultZoom","containerElement","mapElement","Component","memo","Options","FormGroup","FormControlLabel","control","Checkbox","checked","bathroom","onChange","e","target","label","FormHelperText","food","togo","useStyles","makeStyles","theme","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","createData","category","score","rank","rows","Leaderboard","classes","expandIcon","aria-controls","id","TableContainer","component","Paper","Table","TableHead","align","TableBody","map","row","scope","name","Textinput","setVal","TextField","tellChange","LocationMock","index","fakes","MapLoader","withScriptjs","date","supportedGates","Set","validatePlaneNum","toValidate","a","fetch","then","response","json","data","filter","has","gate","code","correct","flightNumber","ans","length","oldState","queuedNum","setTimeout","info","selecting","validating","changed","deepEqual","App","locMock","currentLocation","getNext","currentLocationChanged","flightState","checkboxes","extraTime","setFlightState","setCheckboxes","updateInterval","numUpdates","update","setTimeTillTakeoff","old","setTimeToGate","updateLocation","getFlightDepartureTimeUnix","Date","departureTime","location","content","googleMapURL","loadingElement","oldS","Button","disabled","setInterval","clearInterval","options","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a94d434e.chunk.js","sourcesContent":["import * as React from 'react';\nimport './RectFill.css';\n\n// square/rect fills\n//  ratio is width/height\nclass RectFill extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.wrapperRef = React.createRef();\n        this.state = {\n            dimensions: null,\n            eventListenerAttached: false,\n        };\n    }\n    render(){\n        // ratio is width/height\n        const {padding = 0, ratio = 1} = this.props;\n        const {dimensions, eventListenerAttached} = this.state;\n\n        let inners = null;\n\n        if(eventListenerAttached && dimensions !== null){\n            const {width, height} = dimensions;\n\n            if(width && height){\n                const sideLength = Math.min(width/ratio, height);\n                const style = {\n                    position: 'absolute',\n                    width: `${sideLength*ratio - 2*padding}px`,\n                    height: `${sideLength - 2*padding}px`,\n                    left: `${(width-sideLength*ratio)/2 + padding}px`,\n                    top: `${(height-sideLength)/2 + padding}px`,\n                };\n\n                inners = (\n                    <div style={style} className={this.props.className}>\n                        {this.props.children}\n                    </div>\n                );\n            }\n            else {\n                console.log(`SquareFill error, found width/height to be: [${width}, ${height}]`);\n            }\n        }\n\n        return (\n            <div ref={this.wrapperRef} className={'rect-fill-js-wrapper-style'} >\n                {inners}\n            </div>\n        );\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", () => {\n            this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\n        });\n        this.setState(() => ({eventListenerAttached: true}));\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.dimensions === null){\n            this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\n        }\n    }\n    componentWillUnmount() {\n        if(this.state.eventListenerAttached){\n            // this.wrapperRef.current.removeEventListener(\"resize\", () => {\n            //     console.log('resize');\n            //     this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}))\n            // });\n            window.removeEventListener(\"resize\", () => {\n                console.log('resize');\n                this.setState(() => ({dimensions: this.wrapperRef.current.getBoundingClientRect()}));\n            });\n        }\n    }\n}\n\nexport default RectFill;","import React, { useState } from 'react';\n\nimport { MenuItem, IconButton, Toolbar, AppBar, Drawer } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport './Header.css';\n\nexport default function Header (props) {\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const { timeTillTakeoff, timeToGate, getNextLoc } = props;\n\n    const minLeft = Math.floor((timeTillTakeoff - timeToGate) / 60);\n\n    let colorClass = \"\";\n    if(minLeft <= 15) {\n        colorClass = \" yellow\";\n    }\n    if(minLeft <= 5) {\n        colorClass = \" red\";\n    }\n\n    return (\n        <AppBar color={'primary'} className={'header-div' + colorClass} position={'static'}>\n            <Toolbar>\n                <div>\n                    {\n                        <>\n                            <IconButton\n                                color={'inherit'}\n                                aria-label={'menu'}\n                                aria-haspopup={'true'}\n                                onClick={() => setDrawerOpen(!drawerOpen)}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Drawer\n                                className={'header-drawer'}\n                                anchor={\"left\"}\n                                open={drawerOpen}\n                                onClose={() => setDrawerOpen(false)}\n                            >\n                                <MenuItem className={'header-drawer-button'} href={'#timer-div'} onClick={() => setDrawerOpen(false)}>\n                                    Home\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#map-div'} onClick={() => setDrawerOpen(false)}>\n                                    Map\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#options-div'} onClick={() => setDrawerOpen(false)}>\n                                    Options\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#leaderboards-div'} onClick={() => setDrawerOpen(false)}>\n                                    Leaderboards\n                                </MenuItem>\n                                <MenuItem className={'header-drawer-button'} href={'#leaderboards-div'} onClick={() => {\n                                    getNextLoc();\n                                    setDrawerOpen(false);\n                                }}>\n                                    Get Next Current Location\n                                </MenuItem>\n                            </Drawer>\n                        </>\n                    }\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from 'react';\nimport { Accordion, AccordionSummary, AccordionDetails, Typography } from \"@material-ui/core\";\nimport \"./timer.css\";\n\n\nexport default function Timer(props) {\n    const { timeTillTakeoff, timeToGate, caloriesPerTime } = props;\n    return (\n        <Accordion variant={'outlined'}>\n            <AccordionSummary\n            >\n                <div className=\"style\">\n                    <Typography variant={'body2'}>\n                        Free time left:\n                </Typography>\n                    <Typography variant={'h6'}>\n\t\t\t\t\t\t{Math.floor((timeTillTakeoff - timeToGate) / 60 / 60)} hours {Math.floor((timeTillTakeoff - timeToGate) / 60 % 60)} minutes {(timeTillTakeoff - timeToGate) % 60} seconds\n                </Typography>\n                </div>\n            </AccordionSummary>\n            <AccordionDetails className=\"style2\">\n                <div className=\"style\">\n                    <Typography variant={'body2'}>\n                        Plane takes off in:\n                </Typography>\n                    <Typography variant={'h6'}>\n                        {Math.floor((timeTillTakeoff) / 60 / 60)} hours {Math.floor((timeTillTakeoff) / 60 % 60)} minutes {(timeTillTakeoff) % 60} seconds\n                </Typography>\n                    <Typography variant={'body2'}>\n                        <br></br>Travel time to gate:\n                </Typography>\n                    <Typography variant={'h6'}>\n                        {Math.floor((timeToGate) / 60 / 60)} hours {Math.floor((timeToGate) / 60 % 60)} minutes {(timeToGate) % 60} seconds\n                </Typography>\n                </div>\n            </AccordionDetails>\n        </Accordion>\n    );\n}","import React , { Component } from 'react';\nimport {  GoogleMap, DirectionsRenderer, withGoogleMap, withScriptjs, google} from 'react-google-maps';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      directions: null\n    };\n\n    // for use in routeMe\n    this.directionsService = new window.google.maps.DirectionsService();\n\n    // bind functions\n    this.routeMe = this.routeMe.bind(this);\n    this.routeMeCallback = this.routeMeCallback.bind(this);\n  }\n  // specs:\n  //  startLocation: map { lat | latitude: NUMBER, lng | long | longitude: NUMBER }\n  //  endLocation: map { lat | latitude: NUMBER, lng | long | longitude: NUMBER }\n  //  callback: (time) => ???\n  //    if you (some other class) needs the time, make this \"(time) => setState(...)\" or something\n  //  examples:\n  //    routeMe({latitude: 0.1, long: 0.1}, {lat: 2, lng: -2})\n  //      makes the map display the path from [0.1, 0.1] to [2, -2]\n  routeMe(startLocation, endLocation, callback = (time) => null) {\n    console.log(\"RouteMe called: start, end:\");\n    console.log(startLocation);\n    console.log(endLocation);\n\n    const origin = {\n      lat: startLocation.lat ?? startLocation.latitude ?? 0,\n      lng: startLocation.lng ?? startLocation.long ?? startLocation.longitude ?? 0,\n    };\n    const destination = {\n      lat: endLocation.lat ?? endLocation.latitude ?? 0,\n      lng: endLocation.lng ?? endLocation.long ?? endLocation.longitude ?? 0,\n    };\n    const requestJSON = {\n      origin,\n      destination,\n      travelMode: window.google.maps.TravelMode.WALKING,\n    };\n\n    this.directionsService.route({...requestJSON}, this.routeMeCallback(callback));\n  }\n  // helper function for above\n  routeMeCallback(agentCallback) {\n    return ((result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n          console.log(result);\n        this.setState({\n          directions: result\n        });\n        agentCallback(result.routes[0].legs[0].duration.value);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  }\n    \n  componentDidMount() {\n    // const directionsService = new window.google.maps.DirectionsService();\n    this.props.setRouteMe((val1, val2, val3) => this.routeMe(val1, val2, val3));\n\n    const origin = { lat: 40.756795, lng: -73.954298 };\n    const destination = { lat: 40.857895, lng: -73.954298 };\n\n    this.routeMe(origin, destination, (val) => console.log(`Default routeMe returning ${val} seconds`));\n  }\n\n    render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          containerElement={<div style={{ height: \"400px\", width: \"340px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n/*\n<Map\n    google={this.props.google}\n    zoom={14}\n    style={mapStyles}\n    initialCenter={\n    {\n        lat: -1.2884,\n        lng: 36.8233\n    }\n    }\n/>\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyAOn4IKOryQBul-tiLGCvsXEzAJGNKtX9Q'\n  })(Map);\n  */\n\nexport default React.memo(Map)\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function Options(props) {\n    return (\n        <div>\n            <FormGroup aria-label=\"position\">\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\"\n                        checked={props.state.bathroom}\n                        onChange={(e) => props.setState({ ...props.state, bathroom: e.target.checked })}\n                    />}\n                    label=\"Bathroom\"\n                />\n                <FormHelperText>Select to route you through a restroom on the way to your gate.</FormHelperText>\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\"\n                        checked={props.state.food}\n                        onChange={(e) => props.setState({ ...props.state, food: e.target.checked })}\n                    />}\n                    label=\"Eat in\"\n                />\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\"\n                        checked={props.state.togo}\n                        onChange={(e) => props.setState({ ...props.state, togo: e.target.checked })}\n                    />}\n                    label=\"Food/Coffee To-go\"\n                />\n            </FormGroup>\n        </div>\n    );\n}","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nfunction createData(category, score, rank) {\n    return { category, score, rank };\n}\n\nconst rows = [\n    createData('Calories burned', '832 calories', 'Bronze'),\n    createData('Steps taken', '2873 steps', 'Gold'),\n    createData('Arrival to gate', '3 minutes early', 'Silver'),\n];\n\n\nexport default function Leaderboard() {\n    const classes = useStyles();\n\n    return (\n        <Accordion variant={'outlined'}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography className={classes.heading}>Leaderboards</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>Category</StyledTableCell>\n                                <StyledTableCell align=\"right\">Score</StyledTableCell>\n                                <StyledTableCell align=\"right\">Ranking</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <StyledTableRow key={row.name}>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                        {row.category}\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"right\">{row.score}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{row.rank}</StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                        </TableBody>\n\n                    </Table>\n                </TableContainer>\n            </AccordionDetails>\n        </Accordion>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { TextField } from \"@material-ui/core\";\n\nexport default function Textinput (props) {\n    const [val, setVal] = useState(() => '');\n\n    return (\n        <TextField value={val} onChange={(e) => {\n            setVal(e.target.value);\n            props.tellChange(e.target.value);\n        }} {...props} />\n    );\n}","export default class LocationMock {\n    constructor(){\n        this.index = -1;\n        // lat/long\n        //  Security:       41.97646727821397, -87.90130965501601\n        //  Subway:         41.97540730411563, -87.90320274316586\n        //  AA lounge:      41.97481412314290, -87.90002753367936\n        //  Smoothie King:  41.97759762749232, -87.90717628823200\n        this.fakes = [\n            {\n                lat: 41.97646727821397,\n                lng: -87.90130965501601,\n            },\n            {\n                lat: 41.97540730411563,\n                lng: -87.90320274316586,\n            },\n            {\n                lat: 41.97481412314290,\n                lng: -87.90002753367936,\n            },\n            {\n                lat: 41.97759762749232,\n                lng: -87.907176288232,\n            },\n        ];\n    }\n\n    getNext() {\n        this.index++;\n        console.log('mock returning');\n        console.log(this.fakes[this.index]);\n        return this.fakes[this.index];\n    }\n};","import React from 'react';\n\nimport RectFill from \"./CustomComponents/RectFill/RectFill\";\n\nimport Header from \"./Header/Header.js\";\nimport Timer from \"./Timer/Timer.js\";\nimport Map from \"./Map/Map.js\";\nimport Options from \"./Options/Options.js\";\nimport Leaderboards from \"./Leaderboards/Leaderboards.js\";\nimport { withScriptjs } from \"react-google-maps\";\nimport deepEqual from 'deep-equal';\n\nimport { Button } from \"@material-ui/core\";\nimport Textinput from \"./Textinput\";\n\nimport './App.css';\n\nimport LocationMock from \"./Mocks/FakeGetLocation\";\nconst MapLoader = withScriptjs(Map);\n\n// constants\nconst date = \"2021-01-31\";\n// ms between timer updates\nconst msUpdateInterval = 1000;\n// timer updates between checking flight data again\nconst updatesPerReFetch = 60;\nconst caloriesPerTime = 13.2 / 60;\nconst supportedGates = new Set(['H18', 'H12', 'G20', 'G5', 'E14', 'B2', 'C3', 'C32', 'B18', 'B7', 'B1', 'K1']);\n// time\nconst timeToBathroom = 8 * 60;\nconst timeToFood = 12 * 60;\nconst timeToEatIn = 30 * 60;\n\nasync function validatePlaneNum(toValidate, setState) {\n    fetch(`https://tamuhack-2021.uc.r.appspot.com/flights?date=${date}`)\n        .then(response => response.json())\n        .then(data => {\n            data = data.filter((val) => supportedGates.has(val.gate.code));\n            console.log(data);\n            const correct = data.filter((val) => val.flightNumber === toValidate);\n\n            // validate here\n            let ans = correct.length ? correct[0] : null;\n\n            // return data if validate, else null\n            setState((oldState) => {\n                if(oldState.queuedNum !== \"\"){\n                    setTimeout(() => validatePlaneNum(oldState.queuedNum, setState), 0);\n                    return {\n                        ...oldState,\n                        queuedNum: \"\",\n                    }\n                }\n                else{\n                    return {\n                        info: ans,\n                        selecting: oldState.selecting,\n                        validating: false,\n                        queuedNum: \"\",\n                        changed: !deepEqual(ans, oldState.info),\n                    }\n                }\n            });\n        });\n}\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.locMock = new LocationMock();\n        // call me to change map displayed values\n        this.routeMe = null;\n\n        // state\n        this.state = {\n            currentLocation: this.locMock.getNext(),\n            currentLocationChanged: true,\n            flightState: {\n                info: null,\n                selecting: true,\n                validating: false,\n                queuedNum: \"\",\n                changed: false,\n            },\n            checkboxes: {\n                bathroom: false,\n                food: false,\n                togo: false,\n            },\n            time: {\n                timeTillTakeoff: -1,\n                timeToGate: -1,\n            },\n            extraTime: 0,\n        };\n\n        this.setRouteMe = (val) => this.routeMe = val;\n        this.setFlightState = (val) => this.setState((oldState) => ({ ...oldState, flightState: val(oldState.flightState) }));\n        this.setCheckboxes = (val) => this.setState((oldState) => ({ ...oldState, checkboxes: val }));\n\n        // periodic update interval\n        this.updateInterval = null;\n        this.numUpdates = 0;\n        this.update = () => {\n            if(!this.state.flightState.selecting) {\n                this.setTimeTillTakeoff();\n                if(this.state.flightState.changed || this.state.currentLocationChanged) {\n                    this.setState((old) => ({...old, currentLocationChanged: false, flightState: {...old.flightState, changed: false}}));\n                    this.setTimeToGate();\n                }\n                this.numUpdates++;\n                if(this.numUpdates > updatesPerReFetch){\n                    this.numUpdates = 0;\n                    validatePlaneNum(this.state.flightState.info.flightNumber, (val) => this.setFlightState(val));\n                }\n            }\n        };\n\n        // location\n        this.updateLocation = () => {\n            this.setState((oldState) => ({ ...oldState, currentLocation: this.locMock.getNext(), currentLocationChanged: true, }));\n        };\n\n        // for getting date / time\n        this.getFlightDepartureTimeUnix = () => {\n            return new Date(this.state.flightState.info.departureTime);\n        };\n        // these both return nothing, setting the state\n        this.setTimeTillTakeoff = () => {\n            const ans = Math.floor((this.getFlightDepartureTimeUnix() - new Date()) / 1000);\n            this.setState((oldState) => ({ ...oldState, time: { ...oldState.time, timeTillTakeoff: ans }, }));\n        };\n        // async\n        this.setTimeToGate = () => {\n            this.routeMe(this.state.currentLocation, this.state.flightState.info.gate.location, (ans) => {\n                console.log(`routeMe ans: ${ans}`);\n\n                this.setState((oldState) => ({ ...oldState, time: { ...oldState.time, timeToGate: ans } }));\n            });\n        };\n    }\n    render() {\n        // get values from state\n        const { flightState, checkboxes, time } = this.state;\n\n        const content = (\n            <div className={'content'}>\n                <Header timeTillTakeoff={this.state.time.timeTillTakeoff} timeToGate={this.state.time.timeToGate + this.state.extraTime} getNextLoc={() => this.updateLocation()} />\n                <div id={'timer-div'}>\n                    <Timer timeTillTakeoff={this.state.time.timeTillTakeoff} timeToGate={this.state.time.timeToGate + this.state.extraTime} caloriesPerTime={caloriesPerTime} />\n                </div>\n                <div id={'map-div'}>\n                    <RectFill>\n                        <MapLoader\n                            setRouteMe={this.setRouteMe}\n                            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAOn4IKOryQBul-tiLGCvsXEzAJGNKtX9Q\"\n                            loadingElement={<div style={{ height: `100%` }} />}\n                        />\n                    </RectFill>\n                </div>\n                <div id={'options-div'}>\n                    <Options\n                        state={checkboxes}\n                        setState={this.setCheckboxes}\n                    />\n                </div>\n                <div id={'leaderboards-div'}>\n                    <Leaderboards />\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"App\">\n                {(!flightState.selecting) ? content : (\n                    <>\n                        <div className={'blur-me'}>\n                            {content}\n                        </div>\n                        <div className={'flight-number'}>\n                            <Textinput\n                                label={\"Flight Number\"}\n                                variant={\"outlined\"}\n                                tellChange={(e) => {\n                                    if(flightState.validating) {\n                                        this.setFlightState((oldS) => ({ ...oldS, queuedNum: e, }));\n                                    }\n                                    else {\n                                        this.setFlightState((oldS) => ({ ...oldS, validating: true }));\n                                        validatePlaneNum(e, this.setFlightState);\n                                    }\n                                }}\n                            />\n                            <div className={'submit-button'}>\n                                <Button\n                                    disabled={flightState.validating || !flightState.info}\n                                    onClick={() => {\n                                        if(flightState.validating || !flightState.info) {\n                                            // nothing\n                                        }\n                                        else {\n                                            this.setFlightState((old) => ({ ...old, selecting: false }));\n                                        }\n                                    }}\n                                    variant={'outlined'}\n                                >\n                                    Submit\n                                </Button>\n                                {/*<div className={'loading-div' + (flightState.validating ? ' show' : '')}>*/}\n                                {/*    <CircularProgress variant={'indeterminate'} />*/}\n                                {/*</div>*/}\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.updateInterval = setInterval(() => this.update(), msUpdateInterval);\n    }\n    componentWillUnmount() {\n        clearInterval(this.updateInterval);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // for setting initial time values\n        if(!this.state.flightState.selecting && this.state.time.timeTillTakeoff === -1 && this.state.time.timeToGate === -1) {\n            this.setTimeTillTakeoff();\n            this.setTimeToGate();\n        }\n        // extra time\n        const options = this.state.checkboxes;\n        const extraTime = (options.bathroom ? timeToBathroom : 0) + (options.togo ? timeToFood : 0) + (options.food ? timeToEatIn : 0);\n        if(this.state.extraTime !== extraTime){\n            this.setState((old) => ({...old, extraTime: extraTime}));\n        }\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}